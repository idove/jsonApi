<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- 读取资源属性文件 -->
	<bean class="com.idove.commons.CustomPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
				<value>classpath:config/redis.properties</value>
			</list>
		</property>
		<property name="keyLocation" value="classpath:config/key.properties" />
	</bean>

	<!-- MYSQL数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" />
		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />

		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="maxStatements" value="${jdbc.maxStatements}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
	</bean>

	<bean id="mSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.idove.services.*.domain" />
		<property name="mapperLocations" value="classpath:mybatis/mappers/*/*.xml" />
	</bean>
	<bean id="mSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="mSqlSessionFactory" />
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="mSqlSessionFactory"></property>
		<property name="sqlSessionTemplateBeanName" value="mSqlSessionTemplate"></property>
		<property name="basePackage" value="com.idove.services.*.dao" />
		<property name="annotationClass"
			value="com.idove.annotation.MyBatisRepository" />
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 数据访问代理配置 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" />
			<tx:method name="save*" />
			<tx:method name="register*" />
			<tx:method name="update*" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="page*" read-only="true" />
			<!-- <tx:method name="import*" read-only="true" /> -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 激活Spring注解方式：自动扫描，并注入bean -->
	<context:component-scan
		base-package="com.idove.*" />

	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* com.idove.services.*.service.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>

	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 解析request的编码 ，Default is ISO-8859-1 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 设置最大允许的大小(字节)。-1表示没有限制(默认) 1024*1024*10=10MB -->
		<property name="maxUploadSize" value="1048576000" />
		<!--被允许的最大的内存的大小，Default is 10240 bytes -->
		<property name="maxInMemorySize" value="20480" />
		<!-- 一个类似懒加载的属性.可以定义该属性.让解析文件的时候再抛异常,然后Controller中定义异常处理的方法 -->
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- redis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWait" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	<bean id="jedisShardInfo" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.host}" />
		<constructor-arg index="1" value="${redis.port}" />
		<constructor-arg index="2" value="${redis.timeout}" />
		<property name="password" value="${redis.pass}"/>
	</bean>

	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<ref bean="jedisShardInfo" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="SpringContextUtil" class="com.idove.utils.SpringContextUtil" scope="singleton"></bean>

</beans>